---
import Exercise from "@/Components/Exercise/Exercise.astro";
import Input from "@/Components/Input.astro";
import Label from "@/Components/Label.astro";
---

<Exercise
  title="Ejercicio 10"
  description=`
  Según el número ingresado por un usuario calcula la suma de los valores menores a este número comenzando desde 1`
  messageId="message-10"
>
  <form class="max-w-64 w-full mx-auto h-fit" id="form-10">
    <Label>
      Numero
      <Input
        name="num"
        type="number"
        min="1"
        max="9999"
        autocomplete="off"
        required
      />
    </Label>
  </form>
</Exercise>

<script is:inline type="module">
  import { debounce, handleDomElement } from "/js/utils.js";

  (() => {
    const delay = 250;

    // Ejercicio 10
    const $form10 = document.getElementById("form-10");
    const $message = document.querySelector('p[data-id="message-10"]');

    if (!($form10 instanceof HTMLFormElement)) {
      return;
    }

    const $inputNum = $form10.elements["num"];

    if (
      !($inputNum instanceof HTMLInputElement) ||
      !($message instanceof HTMLElement)
    ) {
      return;
    }

    const [, setMessage] = handleDomElement($message);
    const [num, , getCurrentNum] = handleDomElement($inputNum);

    const handleInputChange = () => {
      getCurrentNum();
      console.log("Input changed", num.value);

      if (num.value === "") {
        setMessage("");
        return;
      }

      if (num.value.length > 4) {
        setMessage("El valor máximo a evaluar es 9999");
        return;
      }

      if (!/[0-9]/.test(num.value)) {
        setMessage("El valor ingresado no es un numero");
        return;
      }

      // const sum = Array.from({ length: num.value - 1 })
      //   .map((_, num) => num + 1)
      //   .reduce((acc, current) => acc + current, 0);

      let sum = 0;
      for (let i = 1; i < num.value; i++) {
        sum += i;
      }

      setMessage(`
        Numero ingresado: ${num.value}<br>
        Suma de valores menores: ${sum}
      `);
    };

    const debouncedHandleInputChange = debounce(handleInputChange, delay);

    $inputNum.addEventListener("keypress", (event) => {
      if (!/[0-9]/.test(event.key)) {
        event.preventDefault();
      }
    });

    $inputNum.addEventListener("input", () => {
      debouncedHandleInputChange();
    });
  })();
</script>
