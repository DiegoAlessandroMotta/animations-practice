---
import Exercise from "@/Components/Exercise/Exercise.astro";
import Input from "@/Components/Input.astro";
import Label from "@/Components/Label.astro";
---

<Exercise
  title="Ejercicio 7"
  description=`
    Condiciones de ingreso a la discoteca de Puerto Maldonado:<br>
    - Si es menor de edad no ingresa<br>
    - Si es menor de edad y está acompañado de un adulto puede ingresar<br>
    - Si es mayor o igual a 18 y menor a 30 puede ingresar, sin ningún beneficio especial<br>
    - Si es mayor o igual a 30 y menor o igual a 60 puede ingresar y recibe una chela<br>
    - Si es mayor a 60 tiene descuento de 10% en bebidas y tragos`
  messageId="message-7"
>
  <form class="max-w-80 w-full mx-auto h-fit" id="form-7">
    <Label>
      Edad:
      <Input
        type="number"
        name="age"
        autocomplete="off"
        min="1"
        max="120"
        required
      />
    </Label>
    <div
      class="flex gap-4 mt-5 min-h-6 invisible"
      data-id="accompanied-confirmation-box"
    >
      <Label row>
        <span class="mr-2">Está acompañado de un adulto</span>
        <Input type="checkbox" name="accompanied" autocomplete="off" />
      </Label>
    </div>
  </form>
</Exercise>

<script is:inline type="module">
  import { debounce, handleDomElement } from "/js/utils.js";

  (() => {
    const delay = 250;

    // Ejercicio 7
    const $form7 = document.getElementById("form-7");
    const $message = document.querySelector('[data-id="message-7"]');
    const $confirmationBox = document.querySelector(
      '[data-id="accompanied-confirmation-box"]',
    );

    if (!($form7 instanceof HTMLFormElement)) {
      return;
    }

    const $inputAge = $form7.elements["age"];
    const $inputAccompanied = $form7.elements["accompanied"];

    if (
      !($inputAge instanceof HTMLInputElement) ||
      !($inputAccompanied instanceof HTMLInputElement) ||
      !($confirmationBox instanceof HTMLElement) ||
      !($message instanceof HTMLElement)
    ) {
      return;
    }

    const [age, , getCurrentAge] = handleDomElement($inputAge);
    const [isAccompanied, setIsAccompanied, getCurrentAccompanient] =
      handleDomElement($inputAccompanied);
    const [, setMessage] = handleDomElement($message);

    const showMessage = () => {
      getCurrentAge();
      getCurrentAccompanient();

      if (age.value === "") {
        setMessage("");
        return;
      }

      if (!/[0-9]/.test(age.value)) {
        setMessage("El valor ingresado no es un numero");
        return;
      }

      if (age.value.length > 4 || ageValue > 120) {
        setMessage("El valor máximo a ingresar es 120");
        return;
      }

      if (ageValue > 60) {
        setMessage(
          "Puede acceder <br> Tiene descuento de 10% en bebidas y tragos",
        );
        return;
      }

      if (ageValue >= 30) {
        setMessage("Puede acceder <br> Tiene derecho a una chela");
        return;
      }

      if (ageValue >= 18) {
        setMessage("Puede acceder <br> No tiene ningún beneficio especial");
        return;
      }

      if (ageValue < 15) {
        setMessage("No puede acceder ya que la edad mínima es 15 años");
        return;
      }

      if (isAccompanied.value === true) {
        setMessage(
          "Puede acceder <br> Aunque es menor de edad está acompañado de un adulto",
        );
        return;
      }

      setMessage(
        "No puede ingresar ya que es menor de edad y no está acompañado por un adulto",
      );
    };

    const debouncedShowMessage = debounce(showMessage, delay);

    $inputAge.addEventListener("keypress", (event) => {
      if (!/[0-9]/.test(event.key)) {
        event.preventDefault();
      }
    });

    $inputAge.addEventListener("input", (event) => {
      debouncedShowMessage();

      const value = event.target.value;

      if (value < 15) {
        $confirmationBox.classList.add("invisible");
        setIsAccompanied(false);
        return;
      }

      if (value < 18) {
        $confirmationBox.classList.remove("invisible");
        return;
      }

      setIsAccompanied(false);
      $confirmationBox.classList.add("invisible");
    });

    $inputAccompanied.addEventListener("change", () => {
      showMessage();
    });
  })();
</script>
